/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package edunova.view;

import edunova.controller.ObradaGrupa;
import edunova.controller.ObradaPolaznik;
import edunova.controller.ObradaPredavac;
import edunova.controller.ObradaSmjer;
import edunova.model.Grupa;
import edunova.model.Operater;
import edunova.model.Polaznik;
import edunova.model.Predavac;
import edunova.model.Smjer;
import edunova.utility.Pomocno;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.FileInputStream;
import java.io.InputStream;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JComponent;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPasswordField;
import javax.swing.JTextField;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperExportManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import net.sf.jasperreports.engine.design.JasperDesign;
import net.sf.jasperreports.engine.xml.JRXmlLoader;
import org.jdesktop.swingx.JXDatePicker;

/**
 *
 * @author Edunova
 */
public class Grupe extends javax.swing.JFrame {

    private ObradaGrupa obrada;
    private Grupa odabrano;
    private SimpleDateFormat df;
    private JXDatePicker datePicker;
    private JLabel labelaDatum;
    /**
     * Creates new form Smjerovi
     */
    
    
    
    public Grupe() {
        initComponents();
         setLocationRelativeTo(null);
        obrada=new ObradaGrupa();
        lista.setModel(new DefaultListModel<Grupa>());
       setTitle("Edunova APP Grupe: " + 
               Pomocno.getOperater().getImePrezime());
       
       if(Pomocno.getOperater().getUloga().equals(Operater.ADMINISTRATOR)){
           akcijaTrazi.setVisible(true);
       }else{
           akcijaTrazi.setVisible(false);
                   
       }
       
        ObradaSmjer os = new ObradaSmjer();
        List<Smjer> ls = os.dohvati("");
        DefaultComboBoxModel<Smjer> ms = new DefaultComboBoxModel<>();
        for (Smjer l : ls) {
            ms.addElement(l);
        }
        
   
        smjerovi.setModel(ms);
        
        
        
         ObradaPredavac op = new ObradaPredavac();
        List<Predavac> lp = op.dohvati("");
        DefaultComboBoxModel<Predavac> mp = new DefaultComboBoxModel<>();
        for (Predavac l : lp) {
            mp.addElement(l);
        }
        predavaci.setModel(mp);
        
        
        
        
          ObradaPolaznik opo = new ObradaPolaznik();
        List<Polaznik> lpo = opo.dohvati("");
        DefaultListModel<Polaznik> mpo = new DefaultListModel<>();
        for (Polaznik l : lpo) {
            mpo.addElement(l);
        }
        sviPolaznici.setModel(mpo);
       
        
        df = new SimpleDateFormat(Pomocno.getOperater().getFormatDatuma());
       
        
        
        polazniciNaGrupi.setModel(new DefaultListModel<Polaznik>());
        
        
          new SatNit(vrijeme).start();
      
       
         labelaDatum = new JLabel();
        labelaDatum.setText("Choose Date by selecting below.");
        labelaDatum.setSize(panelDatum.getSize());
        datePicker = new JXDatePicker();
        datePicker.setSize(panelDatum.getSize());
        datePicker.addActionListener(new ActionListener() {
	public void actionPerformed(ActionEvent e) {
		labelaDatum.setText(datePicker.getDate().toString());
            }
        });
 
 
    panelDatum.add(labelaDatum, BorderLayout.NORTH);
    panelDatum.add(datePicker, BorderLayout.CENTER);
          
          
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        uvjet = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        akcijaTrazi = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        lista = new javax.swing.JList();
        jLabel2 = new javax.swing.JLabel();
        naziv = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        akcijaOdustani = new javax.swing.JButton();
        akcijaDodajNovi = new javax.swing.JButton();
        akcijaPromjeni = new javax.swing.JButton();
        akcijaObrisi = new javax.swing.JButton();
        smjerovi = new javax.swing.JComboBox();
        jLabel7 = new javax.swing.JLabel();
        predavaci = new javax.swing.JComboBox();
        jLabel8 = new javax.swing.JLabel();
        brojPolaznika = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        polazniciNaGrupi = new javax.swing.JList();
        jScrollPane3 = new javax.swing.JScrollPane();
        sviPolaznici = new javax.swing.JList();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        akcijaObrisiIzGrupe = new javax.swing.JButton();
        akcijaDodajPolaznikeNaGrupu = new javax.swing.JButton();
        vrijeme = new javax.swing.JLabel();
        akcijaSlanjePoruke = new javax.swing.JButton();
        akcijaGenerirajPDF = new javax.swing.JButton();
        panelDatum = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Smjerovi");

        jLabel1.setText("Uvjet (* za sve)");

        akcijaTrazi.setText("Traži");
        akcijaTrazi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                akcijaTraziActionPerformed(evt);
            }
        });

        lista.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        lista.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                listaValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(lista);

        jLabel2.setText("Naziv");

        jLabel5.setText("Smjer");

        akcijaOdustani.setText("Odustani");
        akcijaOdustani.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                akcijaOdustaniActionPerformed(evt);
            }
        });

        akcijaDodajNovi.setText("Dodaj novi");
        akcijaDodajNovi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                akcijaDodajNoviActionPerformed(evt);
            }
        });

        akcijaPromjeni.setText("Promjeni");
        akcijaPromjeni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                akcijaPromjeniActionPerformed(evt);
            }
        });

        akcijaObrisi.setText("Obriši");
        akcijaObrisi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                akcijaObrisiActionPerformed(evt);
            }
        });

        smjerovi.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                smjeroviPropertyChange(evt);
            }
        });

        jLabel7.setText("Predavač");

        jLabel8.setText("Broj polaznika (cijeli broj, npr. 14)");

        jScrollPane2.setViewportView(polazniciNaGrupi);

        jScrollPane3.setViewportView(sviPolaznici);

        jLabel3.setText("Polaznici na grupi");

        jLabel4.setText("Svi polaznici");

        akcijaObrisiIzGrupe.setText(">");
        akcijaObrisiIzGrupe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                akcijaObrisiIzGrupeActionPerformed(evt);
            }
        });

        akcijaDodajPolaznikeNaGrupu.setText("<");
        akcijaDodajPolaznikeNaGrupu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                akcijaDodajPolaznikeNaGrupuActionPerformed(evt);
            }
        });

        vrijeme.setText("jLabel6");

        akcijaSlanjePoruke.setText("Šalji poruku");
        akcijaSlanjePoruke.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                akcijaSlanjePorukeActionPerformed(evt);
            }
        });

        akcijaGenerirajPDF.setText("PDF");
        akcijaGenerirajPDF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                akcijaGenerirajPDFActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelDatumLayout = new javax.swing.GroupLayout(panelDatum);
        panelDatum.setLayout(panelDatumLayout);
        panelDatumLayout.setHorizontalGroup(
            panelDatumLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        panelDatumLayout.setVerticalGroup(
            panelDatumLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 52, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(akcijaOdustani, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(29, 29, 29)
                                .addComponent(akcijaDodajNovi, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(18, 18, 18))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel1)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(uvjet, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(akcijaTrazi))
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel2)
                                    .addComponent(naziv, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                                    .addComponent(jLabel5)
                                    .addComponent(smjerovi, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel7)
                                    .addComponent(predavaci, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel8)
                                    .addComponent(brojPolaznika)
                                    .addComponent(panelDatum, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(27, 27, 27)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(akcijaPromjeni, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(18, 18, 18)
                                .addComponent(akcijaObrisi, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(35, 35, 35))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(96, 96, 96)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(akcijaObrisiIzGrupe)
                                            .addComponent(akcijaDodajPolaznikeNaGrupu))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(vrijeme, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(akcijaSlanjePoruke)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(akcijaGenerirajPDF)
                        .addGap(121, 121, 121))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addGap(21, 21, 21)
                            .addComponent(jLabel2)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(naziv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jLabel5)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(smjerovi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jLabel7)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(predavaci, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(panelDatum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(94, 94, 94))
                        .addGroup(layout.createSequentialGroup()
                            .addContainerGap()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel3)
                                .addComponent(jLabel4))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 268, Short.MAX_VALUE)
                                        .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING)))
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(73, 73, 73)
                                    .addComponent(akcijaObrisiIzGrupe)
                                    .addGap(35, 35, 35)
                                    .addComponent(akcijaDodajPolaznikeNaGrupu)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(brojPolaznika, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(uvjet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(akcijaTrazi))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(akcijaOdustani)
                    .addComponent(akcijaDodajNovi)
                    .addComponent(akcijaPromjeni)
                    .addComponent(akcijaObrisi))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(vrijeme)
                    .addComponent(akcijaSlanjePoruke)
                    .addComponent(akcijaGenerirajPDF))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void akcijaTraziActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_akcijaTraziActionPerformed

        cistiPolja();

        List<Grupa> entiteti = obrada.
        dohvati(uvjet.getText());

        DefaultListModel<Grupa> m = new DefaultListModel<>();
        for (Grupa e : entiteti) {
            System.out.println("Našao sam: " + e.getNaziv() + " koja se nalazi na smjeru" +
                    e.getSmjer().getNaziv() + " ko jem predaje " + 
                    e.getPredavac().getImePrezime());
            
            for (Polaznik p : e.getPolaznici()) {
                System.out.println(p.getImePrezime());
            }
            
            
            m.addElement(e);
        }
        lista.setModel(m);

    }//GEN-LAST:event_akcijaTraziActionPerformed

    private void listaValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_listaValueChanged
        reset();
        odabrano = (Grupa) lista.getSelectedValue();
        if(odabrano==null){
            return;
        }
        naziv.setText(odabrano.getNaziv());
        
        
        //smjerovi.setSelectedItem(odabrano.getSmjer());
        
        DefaultComboBoxModel<Smjer> ms = (DefaultComboBoxModel<Smjer>) smjerovi.getModel();
        for(int i=0;i<ms.getSize();i++){
            if(ms.getElementAt(i).getSifra()==odabrano.getSmjer().getSifra()){
                smjerovi.setSelectedIndex(i);
                break;
            }
        }
        
        
        
          DefaultComboBoxModel<Predavac> mp = (DefaultComboBoxModel<Predavac>) predavaci.getModel();
        for(int i=0;i<mp.getSize();i++){
            if(mp.getElementAt(i).getSifra()==odabrano.getPredavac().getSifra()){
                predavaci.setSelectedIndex(i);
                break;
            }
        }
       
        
        SimpleDateFormat df = new SimpleDateFormat(Pomocno.FORMAT_DATUM_UNOS);
        try {
            labelaDatum.setText(df.format(odabrano.getDatumPocetka()));
        } catch (Exception e) {
            labelaDatum.setText("");
        }
        

        
        brojPolaznika.setText(String.valueOf(odabrano.getBrojPolaznika()));
        
        
        DefaultListModel<Polaznik> mpo = new DefaultListModel<>();
        for (Polaznik l : odabrano.getPolaznici()) {
            mpo.addElement(l);
        }
        polazniciNaGrupi.setModel(mpo);
        
        
    }//GEN-LAST:event_listaValueChanged

    private void akcijaOdustaniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_akcijaOdustaniActionPerformed
        dispose();
    }//GEN-LAST:event_akcijaOdustaniActionPerformed

    private void akcijaDodajNoviActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_akcijaDodajNoviActionPerformed
        reset();
        
         Grupa o = new Grupa();
        if(naziv.getText().trim().isEmpty()){
            greska(naziv, "Obavezno naziv");
            return;
        }
        o.setNaziv(naziv.getText().trim());
        
       
        if(labelaDatum.getText().trim().length()>0){
        try {
            o.setDatumPocetka(df.parse(labelaDatum.getText().trim().replace(" ","")));
        } catch (Exception e) {
            greska(labelaDatum, "datum nije dobrog formata");
            return;
        }
        }else{
            o.setDatumPocetka(null);
        }
       

       
        
        o.setSmjer((Smjer) smjerovi.getSelectedItem());
        o.setPredavac((Predavac)predavaci.getSelectedItem());
        
        try {
            o.setBrojPolaznika(Integer.parseInt(brojPolaznika.getText().trim()));
        } catch (Exception e) {
            greska(brojPolaznika, "broj nije dobrog formata");
            return;
        }
        
        List<Polaznik> l = new ArrayList<>();
        DefaultListModel<Polaznik> m = (DefaultListModel<Polaznik>) polazniciNaGrupi.getModel();
        for(int i=0;i<m.getSize();i++){
            l.add(m.getElementAt(i));
        }
        o.setPolaznici(l);
        o=obrada.dodaj(o);

        DefaultListModel<Grupa> m1 =(DefaultListModel<Grupa>) lista.getModel();
        m1.addElement(o);

        // System.out.println(o.getSifra());

    }//GEN-LAST:event_akcijaDodajNoviActionPerformed

    private void akcijaPromjeniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_akcijaPromjeniActionPerformed
        if(odabrano==null){
            return;
        }
        reset();
        //kontorle
        if(naziv.getText().trim().isEmpty()){
            greska(naziv, "Obavezno naziv");
            return;
        }
       
        odabrano.setNaziv(naziv.getText().trim());
        odabrano.setSmjer((Smjer)smjerovi.getSelectedItem());
        odabrano.setPredavac((Predavac)predavaci.getSelectedItem());
         if(labelaDatum.getText().trim().length()>0){
        try {
            odabrano.setDatumPocetka(df.parse(labelaDatum.getText().trim().replace(" ","")));
        } catch (Exception e) {
            greska(labelaDatum, "datum nije dobrog formata");
            return;
        }
        }else{
            odabrano.setDatumPocetka(null);
        }
         
         try {
            odabrano.setBrojPolaznika(Integer.parseInt(brojPolaznika.getText().trim()));
        } catch (Exception e) {
            greska(brojPolaznika, "broj nije dobrog formata");
            return;
        }
         
       List<Polaznik> l = new ArrayList<>();
        DefaultListModel<Polaznik> m = (DefaultListModel<Polaznik>) polazniciNaGrupi.getModel();
        for(int i=0;i<m.getSize();i++){
            l.add(m.getElementAt(i));
        }
        odabrano.setPolaznici(l);

        //promjena u bazi
        if(!obrada.promjeni(odabrano)){
            return;
        }

        //dodavanje/postavljanje
        //nekada ne radi dobro
        lista.repaint();
        //manje optimizirano
        // akcijaTraziActionPerformed(evt);
        /*
        DefaultListModel<Operater> m = (DefaultListModel<Operater>) lista.getModel();

        Enumeration<Operater> e = m.elements();
        Operater o;
        while(e.hasMoreElements()){
            o=e.nextElement();
            if(o.getSifra()==odabrano.getSifra()){
                System.out.println(" treba zamijeniti " + o.getPrezime() + " u " +
                    odabrano.getPrezime());
                break;
            }
        }
        */
    }//GEN-LAST:event_akcijaPromjeniActionPerformed

    private void akcijaObrisiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_akcijaObrisiActionPerformed

        odabrano = (Grupa) lista.getSelectedValue();
        if(odabrano==null){
            return;
        }
        if(JOptionPane.showConfirmDialog(getParent(), "Jeste li sigurni da želite obrisati " + odabrano.getNaziv() + "?","Brisanje smjera",JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE)==JOptionPane.NO_OPTION){
            return;
        }

        if(!obrada.obrisi(odabrano)){
            return;
        }

        DefaultListModel<Grupa> m = (DefaultListModel<Grupa>) lista.getModel();
        m.removeElement(odabrano);
        lista.repaint();
        cistiPolja();
    }//GEN-LAST:event_akcijaObrisiActionPerformed

    private void smjeroviPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_smjeroviPropertyChange
      
    }//GEN-LAST:event_smjeroviPropertyChange

    private void akcijaObrisiIzGrupeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_akcijaObrisiIzGrupeActionPerformed
         List<Polaznik> l = this.polazniciNaGrupi.getSelectedValuesList();
        DefaultListModel<Polaznik> m = (DefaultListModel<Polaznik>) this.polazniciNaGrupi.getModel();
         for (Polaznik polaznik : l) {
             for(int i =0; i<m.getSize();i++){
                 if(m.get(i).getSifra()==polaznik.getSifra()){
                     m.removeElementAt(i);
                     break;
                 }
             }
        }
    }//GEN-LAST:event_akcijaObrisiIzGrupeActionPerformed

    private void akcijaDodajPolaznikeNaGrupuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_akcijaDodajPolaznikeNaGrupuActionPerformed
        List<Polaznik> l = this.sviPolaznici.getSelectedValuesList();
       DefaultListModel<Polaznik> m = (DefaultListModel<Polaznik>) this.polazniciNaGrupi.getModel();
       boolean postoji; 
       for (Polaznik polaznik : l) {
           postoji=false;
           for(int i =0; i<m.getSize();i++){
               if(polaznik.getSifra()==
                       m.get(i).getSifra()){
                   postoji=true;
                   break;
               }
           }
           if(!postoji){
               m.addElement(polaznik);
           }
            
        }
    }//GEN-LAST:event_akcijaDodajPolaznikeNaGrupuActionPerformed

    private void akcijaSlanjePorukeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_akcijaSlanjePorukeActionPerformed
      if(odabrano==null){
          return;
      }
      
      if(odabrano.getPolaznici().size()==0){
          return;
      }
      
        SlanjePoruke sp = new SlanjePoruke(odabrano);
        sp.setVisible(true);
    }//GEN-LAST:event_akcijaSlanjePorukeActionPerformed

    private void akcijaGenerirajPDFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_akcijaGenerirajPDFActionPerformed
         if(odabrano==null ||
                lista.getSelectedValuesList().isEmpty()){
            JOptionPane.showMessageDialog(rootPane,"Prvo odaberite stavku","Pogreška",JOptionPane.ERROR_MESSAGE);
            this.lista.requestFocus();
            return;
        }
        
        
        try{
        InputStream inputStream = new FileInputStream ("reports/DetaljiGrupeFancy.jrxml");
 
        

        JRBeanCollectionDataSource beanColDataSource = new
        JRBeanCollectionDataSource(odabrano.getPolaznici());
 
        Map parameters = new HashMap();
// parameters.put("nazivGrupe",grupa.getNaziv());
// parameters.put("predavac",grupa.getPredavac().toString());
        
        parameters.put("grupa",odabrano);
        parameters.put("imeGrupe",odabrano.getNaziv());
        
JasperDesign jasperDesign = JRXmlLoader.load(inputStream);
JasperReport jasperReport = JasperCompileManager.compileReport(jasperDesign);
JasperPrint jasperPrint = JasperFillManager.fillReport(jasperReport, parameters, beanColDataSource);
JasperExportManager.exportReportToPdfFile(jasperPrint, "d:/DetaljiGrupeFancy.pdf"); 

ProcessBuilder pb = new ProcessBuilder("cmd", "/C start " + "d:/DetaljiGrupeFancy.pdf");
                pb.start();

       }
       catch(Exception e){
           e.printStackTrace();
       }
        
        
      
    }//GEN-LAST:event_akcijaGenerirajPDFActionPerformed


    private void cistiPolja(){
         naziv.setText("");
        labelaDatum.setText("");
       ((DefaultListModel<Polaznik>) polazniciNaGrupi.getModel()).removeAllElements();
   
    }
     private void reset() {
       
        for (Component c : this.getContentPane().getComponents()) {
            if (c instanceof JTextField || c instanceof JPasswordField){
                JComponent jc = (JComponent) c;
                jc.setBackground(Color.white);
                jc.setToolTipText("");
            }
        }
    }
      private void greska(JComponent komponenta, String obavijest){
           komponenta.setBackground(Color.red);
           komponenta.requestFocus();
           komponenta.setToolTipText(obavijest);
           
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton akcijaDodajNovi;
    private javax.swing.JButton akcijaDodajPolaznikeNaGrupu;
    private javax.swing.JButton akcijaGenerirajPDF;
    private javax.swing.JButton akcijaObrisi;
    private javax.swing.JButton akcijaObrisiIzGrupe;
    private javax.swing.JButton akcijaOdustani;
    private javax.swing.JButton akcijaPromjeni;
    private javax.swing.JButton akcijaSlanjePoruke;
    private javax.swing.JButton akcijaTrazi;
    private javax.swing.JTextField brojPolaznika;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JList lista;
    private javax.swing.JTextField naziv;
    private javax.swing.JPanel panelDatum;
    private javax.swing.JList polazniciNaGrupi;
    private javax.swing.JComboBox predavaci;
    private javax.swing.JComboBox smjerovi;
    private javax.swing.JList sviPolaznici;
    private javax.swing.JTextField uvjet;
    private javax.swing.JLabel vrijeme;
    // End of variables declaration//GEN-END:variables
}
