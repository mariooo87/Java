/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package edunova.view;

import edunova.controller.ObradaGrupa;
import edunova.controller.ObradaPolaznik;
import edunova.controller.ObradaPredavac;
import edunova.controller.ObradaSmjer;
import edunova.model.Grupa;
import edunova.model.Operater;
import edunova.model.Polaznik;
import edunova.model.Predavac;
import edunova.model.Smjer;
import edunova.utility.Pomocno;
import java.awt.Color;
import java.awt.Component;
import java.io.FileInputStream;
import java.io.InputStream;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JComponent;
import javax.swing.JOptionPane;
import javax.swing.JPasswordField;
import javax.swing.JTextField;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperExportManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import net.sf.jasperreports.engine.design.JasperDesign;
import net.sf.jasperreports.engine.xml.JRXmlLoader;

/**
 *
 * @author Mario
 */
public class Grupe extends javax.swing.JInternalFrame {

    private ObradaGrupa obrada;
    private Grupa odabrano;
    

    /**
     * Creates new form Grupe
     */
    public Grupe() {
        initComponents();
        
        obrada = new ObradaGrupa();
        lista.setModel(new DefaultListModel<Grupa>());
        setTitle("Grupe");

        if (Pomocno.getOperater().getUloga().equals(Operater.ADMINISTRATOR)) {
            akcijaTrazi.setVisible(true);
        } else {
            akcijaTrazi.setVisible(false);

        }

        ObradaSmjer os = new ObradaSmjer();
        List<Smjer> ls = os.dohvati("");
        DefaultComboBoxModel<Smjer> ms = new DefaultComboBoxModel<>();
        for (Smjer l : ls) {
            ms.addElement(l);
        }

        smjerovi.setModel(ms);

        ObradaPredavac op = new ObradaPredavac();
        List<Predavac> lp = op.dohvati("");
        DefaultComboBoxModel<Predavac> mp = new DefaultComboBoxModel<>();
        for (Predavac l : lp) {
            mp.addElement(l);
        }
        predavaci.setModel(mp);

        ObradaPolaznik opo = new ObradaPolaznik();
        List<Polaznik> lpo = opo.dohvati("");
        DefaultListModel<Polaznik> mpo = new DefaultListModel<>();
        for (Polaznik l : lpo) {
            mpo.addElement(l);
        }
        sviPolaznici.setModel(mpo);

        polazniciNaGrupi.setModel(new DefaultListModel<Polaznik>());

       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        polazniciNaGrupi = new javax.swing.JList();
        jScrollPane3 = new javax.swing.JScrollPane();
        sviPolaznici = new javax.swing.JList();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        akcijaObrisiIzGrupe = new javax.swing.JButton();
        akcijaDodajPolaznikeNaGrupu = new javax.swing.JButton();
        akcijaSlanjePoruke = new javax.swing.JButton();
        akcijaGenerirajPDF = new javax.swing.JButton();
        akcijaOdustani = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        uvjet = new javax.swing.JTextField();
        akcijaTrazi = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        lista = new javax.swing.JList();
        jPanel2 = new javax.swing.JPanel();
        smjerovi = new javax.swing.JComboBox();
        jLabel8 = new javax.swing.JLabel();
        naziv = new javax.swing.JTextField();
        predavaci = new javax.swing.JComboBox();
        jLabel7 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        brojPolaznika = new javax.swing.JTextField();
        datum = new com.toedter.calendar.JDateChooser();
        jLabel1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        akcijaObrisi = new javax.swing.JButton();
        akcijaPromjeni = new javax.swing.JButton();
        akcijaDodajNovi = new javax.swing.JButton();

        setBorder(null);

        jScrollPane2.setViewportView(polazniciNaGrupi);

        jScrollPane3.setViewportView(sviPolaznici);

        jLabel3.setText("Polaznici na grupi");

        jLabel4.setText("Svi polaznici");

        akcijaObrisiIzGrupe.setText(">");
        akcijaObrisiIzGrupe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                akcijaObrisiIzGrupeActionPerformed(evt);
            }
        });

        akcijaDodajPolaznikeNaGrupu.setText("<");
        akcijaDodajPolaznikeNaGrupu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                akcijaDodajPolaznikeNaGrupuActionPerformed(evt);
            }
        });

        akcijaSlanjePoruke.setIcon(new javax.swing.ImageIcon(getClass().getResource("/slike/mail.png"))); // NOI18N
        akcijaSlanjePoruke.setText("Šalji poruku");
        akcijaSlanjePoruke.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                akcijaSlanjePorukeActionPerformed(evt);
            }
        });

        akcijaGenerirajPDF.setIcon(new javax.swing.ImageIcon(getClass().getResource("/slike/pdf.png"))); // NOI18N
        akcijaGenerirajPDF.setText("PDF");
        akcijaGenerirajPDF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                akcijaGenerirajPDFActionPerformed(evt);
            }
        });

        akcijaOdustani.setIcon(new javax.swing.ImageIcon(getClass().getResource("/slike/back.png"))); // NOI18N
        akcijaOdustani.setText("Nazad");
        akcijaOdustani.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                akcijaOdustaniActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Pretraga (* za sve)"));

        akcijaTrazi.setIcon(new javax.swing.ImageIcon(getClass().getResource("/slike/Magnifier2.png"))); // NOI18N
        akcijaTrazi.setText("Traži");
        akcijaTrazi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                akcijaTraziActionPerformed(evt);
            }
        });

        lista.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        lista.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                listaValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(lista);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(uvjet, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(akcijaTrazi, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(uvjet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(akcijaTrazi))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 279, Short.MAX_VALUE)
                .addContainerGap())
        );

        smjerovi.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                smjeroviPropertyChange(evt);
            }
        });

        jLabel8.setText("Broj polaznika");

        jLabel7.setText("Predavač");

        jLabel5.setText("Smjer");

        jLabel2.setText("Naziv");

        jLabel1.setText("Datum početka");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2)
                    .addComponent(jLabel5)
                    .addComponent(jLabel7)
                    .addComponent(jLabel1)
                    .addComponent(predavaci, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(smjerovi, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(naziv)
                    .addComponent(datum, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(brojPolaznika)
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(naziv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(smjerovi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(predavaci, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(datum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(brojPolaznika, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        akcijaObrisi.setIcon(new javax.swing.ImageIcon(getClass().getResource("/slike/delete.png"))); // NOI18N
        akcijaObrisi.setText("Obriši");
        akcijaObrisi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                akcijaObrisiActionPerformed(evt);
            }
        });

        akcijaPromjeni.setIcon(new javax.swing.ImageIcon(getClass().getResource("/slike/ok.png"))); // NOI18N
        akcijaPromjeni.setText("Promjeni");
        akcijaPromjeni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                akcijaPromjeniActionPerformed(evt);
            }
        });

        akcijaDodajNovi.setIcon(new javax.swing.ImageIcon(getClass().getResource("/slike/plus.png"))); // NOI18N
        akcijaDodajNovi.setText("Dodaj novi");
        akcijaDodajNovi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                akcijaDodajNoviActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(akcijaDodajNovi, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(akcijaObrisi, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(akcijaPromjeni, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(akcijaDodajNovi)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(akcijaPromjeni)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(akcijaObrisi)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(akcijaOdustani, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(akcijaDodajPolaznikeNaGrupu)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addComponent(akcijaObrisiIzGrupe)
                                        .addGap(6, 6, 6))))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(akcijaGenerirajPDF, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(akcijaSlanjePoruke, javax.swing.GroupLayout.Alignment.LEADING))
                        .addGap(38, 38, 38))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel4))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 210, Short.MAX_VALUE)
                                    .addComponent(jScrollPane3)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(74, 74, 74)
                                .addComponent(akcijaObrisiIzGrupe)
                                .addGap(30, 30, 30)
                                .addComponent(akcijaDodajPolaznikeNaGrupu)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(45, 45, 45)
                                .addComponent(akcijaSlanjePoruke)
                                .addGap(18, 18, 18)
                                .addComponent(akcijaGenerirajPDF))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addComponent(akcijaOdustani)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void akcijaDodajNoviActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_akcijaDodajNoviActionPerformed
        reset();

        Grupa o = new Grupa();
        if (naziv.getText().trim().isEmpty()) {
            greska(naziv, "Obavezno naziv");
            return;
        }
        
        if (datum.getCalendar() == null || datum.getCalendar().getTime() == null) {
            JOptionPane.showMessageDialog(rootPane, "Prvo odaberite datum", "Pogreška", JOptionPane.ERROR_MESSAGE);
            this.datum.requestFocus();
            return;
        }
        
        o.setNaziv(naziv.getText().trim());
        o.setDatumPocetka(datum.getDateEditor().getDate());
        o.setSmjer((Smjer) smjerovi.getSelectedItem());
        o.setPredavac((Predavac) predavaci.getSelectedItem());

        try {
            o.setBrojPolaznika(Integer.parseInt(brojPolaznika.getText().trim()));
        } catch (Exception e) {
            greska(brojPolaznika, "Broj nije dobrog formata");
            return;
        }

        List<Polaznik> l = new ArrayList<>();
        DefaultListModel<Polaznik> m = (DefaultListModel<Polaznik>) polazniciNaGrupi.getModel();
        for (int i = 0; i < m.getSize(); i++) {
            l.add(m.getElementAt(i));
        }
        o.setPolaznici(l);
        o = obrada.dodaj(o);

        DefaultListModel<Grupa> m1 = (DefaultListModel<Grupa>) lista.getModel();
        m1.addElement(o);

    }//GEN-LAST:event_akcijaDodajNoviActionPerformed

    private void akcijaPromjeniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_akcijaPromjeniActionPerformed
        if (odabrano == null) {
            return;
        }
        reset();
        
        if (naziv.getText().trim().isEmpty()) {
            greska(naziv, "Obavezno naziv");
            return;
        }

        odabrano.setNaziv(naziv.getText().trim());
        odabrano.setSmjer((Smjer) smjerovi.getSelectedItem());
        odabrano.setPredavac((Predavac) predavaci.getSelectedItem());
        odabrano.setDatumPocetka(datum.getDateEditor().getDate());
        

        try {
            odabrano.setBrojPolaznika(Integer.parseInt(brojPolaznika.getText().trim()));
        } catch (Exception e) {
            greska(brojPolaznika, "Broj nije dobrog formata");
            return;
        }

        List<Polaznik> l = new ArrayList<>();
        DefaultListModel<Polaznik> m = (DefaultListModel<Polaznik>) polazniciNaGrupi.getModel();
        for (int i = 0; i < m.getSize(); i++) {
            l.add(m.getElementAt(i));
        }
        odabrano.setPolaznici(l);

        if (!obrada.promjeni(odabrano)) {
            return;
        }

        lista.repaint();

    }//GEN-LAST:event_akcijaPromjeniActionPerformed

    private void akcijaObrisiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_akcijaObrisiActionPerformed

        odabrano = (Grupa) lista.getSelectedValue();
        if (odabrano == null) {
            return;
        }
        if (JOptionPane.showConfirmDialog(getParent(), "Jeste li sigurni da želite obrisati " + odabrano.getNaziv() + "?", "Brisanje smjera", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE) == JOptionPane.NO_OPTION) {
            return;
        }

        if (!obrada.obrisi(odabrano)) {
            return;
        }

        DefaultListModel<Grupa> m = (DefaultListModel<Grupa>) lista.getModel();
        m.removeElement(odabrano);
        lista.repaint();
        cistiPolja();
    }//GEN-LAST:event_akcijaObrisiActionPerformed

    private void smjeroviPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_smjeroviPropertyChange

    }//GEN-LAST:event_smjeroviPropertyChange

    private void akcijaObrisiIzGrupeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_akcijaObrisiIzGrupeActionPerformed
        List<Polaznik> l = this.polazniciNaGrupi.getSelectedValuesList();
        DefaultListModel<Polaznik> m = (DefaultListModel<Polaznik>) this.polazniciNaGrupi.getModel();
        for (Polaznik polaznik : l) {
            for (int i = 0; i < m.getSize(); i++) {
                if (m.get(i).getSifra() == polaznik.getSifra()) {
                    m.removeElementAt(i);
                    break;
                }
            }
        }
    }//GEN-LAST:event_akcijaObrisiIzGrupeActionPerformed

    private void akcijaTraziActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_akcijaTraziActionPerformed

        cistiPolja();

        List<Grupa> entiteti = obrada.
                dohvati(uvjet.getText());

        DefaultListModel<Grupa> m = new DefaultListModel<>();
        for (Grupa e : entiteti) {
            for (Polaznik p : e.getPolaznici()) {
                
            }

            m.addElement(e);
        }
        lista.setModel(m);
    }//GEN-LAST:event_akcijaTraziActionPerformed

    private void akcijaDodajPolaznikeNaGrupuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_akcijaDodajPolaznikeNaGrupuActionPerformed
        List<Polaznik> l = this.sviPolaznici.getSelectedValuesList();
        DefaultListModel<Polaznik> m = (DefaultListModel<Polaznik>) this.polazniciNaGrupi.getModel();
        boolean postoji;
        for (Polaznik polaznik : l) {
            postoji = false;
            for (int i = 0; i < m.getSize(); i++) {
                if (polaznik.getSifra()
                        == m.get(i).getSifra()) {
                    postoji = true;
                    break;
                }
            }
            if (!postoji) {
                m.addElement(polaznik);
            }

        }
    }//GEN-LAST:event_akcijaDodajPolaznikeNaGrupuActionPerformed

    private void listaValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_listaValueChanged
        reset();
        odabrano = (Grupa) lista.getSelectedValue();
        if (odabrano == null) {
            return;
        }
        naziv.setText(odabrano.getNaziv());

        DefaultComboBoxModel<Smjer> ms = (DefaultComboBoxModel<Smjer>) smjerovi.getModel();
        for (int i = 0; i < ms.getSize(); i++) {
            if (ms.getElementAt(i).getSifra() == odabrano.getSmjer().getSifra()) {
                smjerovi.setSelectedIndex(i);
                break;
            }
        }

        DefaultComboBoxModel<Predavac> mp = (DefaultComboBoxModel<Predavac>) predavaci.getModel();
        for (int i = 0; i < mp.getSize(); i++) {
            if (mp.getElementAt(i).getSifra() == odabrano.getPredavac().getSifra()) {
                predavaci.setSelectedIndex(i);
                break;
            }
        }

        
        datum.setDate(odabrano.getDatumPocetka());

        brojPolaznika.setText(String.valueOf(odabrano.getBrojPolaznika()));

        DefaultListModel<Polaznik> mpo = new DefaultListModel<>();
        for (Polaznik l : odabrano.getPolaznici()) {
            mpo.addElement(l);
        }
        polazniciNaGrupi.setModel(mpo);

    }//GEN-LAST:event_listaValueChanged

    private void akcijaSlanjePorukeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_akcijaSlanjePorukeActionPerformed

        if (odabrano == null
                || lista.getSelectedValuesList().isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "Prvo odaberite stavku", "Pogreška", JOptionPane.ERROR_MESSAGE);
            this.lista.requestFocus();
            return;
        }

        SlanjePoruke sp = new SlanjePoruke(odabrano);
        sp.setVisible(true);
    }//GEN-LAST:event_akcijaSlanjePorukeActionPerformed

    private void akcijaGenerirajPDFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_akcijaGenerirajPDFActionPerformed
        if (odabrano == null
                || lista.getSelectedValuesList().isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "Prvo odaberite stavku", "Pogreška", JOptionPane.ERROR_MESSAGE);
            this.lista.requestFocus();
            return;
        }

        try {
            InputStream inputStream = new FileInputStream("reports/DetaljiGrupeFancy.jrxml");

            JRBeanCollectionDataSource beanColDataSource = new JRBeanCollectionDataSource(odabrano.getPolaznici());

            Map parameters = new HashMap();
            

            parameters.put("grupa", odabrano);
            parameters.put("imeGrupe", odabrano.getNaziv());

            JasperDesign jasperDesign = JRXmlLoader.load(inputStream);
            JasperReport jasperReport = JasperCompileManager.compileReport(jasperDesign);
            JasperPrint jasperPrint = JasperFillManager.fillReport(jasperReport, parameters, beanColDataSource);
            JasperExportManager.exportReportToPdfFile(jasperPrint, "d:/DetaljiGrupeFancy.pdf");

            ProcessBuilder pb = new ProcessBuilder("cmd", "/C start " + "d:/DetaljiGrupeFancy.pdf");
            pb.start();

        } catch (Exception e) {
            e.printStackTrace();
        }

    }//GEN-LAST:event_akcijaGenerirajPDFActionPerformed

    private void akcijaOdustaniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_akcijaOdustaniActionPerformed
        dispose();
    }//GEN-LAST:event_akcijaOdustaniActionPerformed

    private void cistiPolja() {
        naziv.setText("");
        
        ((DefaultListModel<Polaznik>) polazniciNaGrupi.getModel()).removeAllElements();

    }

    private void reset() {

        for (Component c : this.getContentPane().getComponents()) {
            if (c instanceof JTextField || c instanceof JPasswordField) {
                JComponent jc = (JComponent) c;
                jc.setBackground(Color.white);
                jc.setToolTipText("");
            }
        }
    }

    private void greska(JComponent komponenta, String obavijest) {
        komponenta.setBackground(Color.red);
        komponenta.requestFocus();
        komponenta.setToolTipText(obavijest);

    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton akcijaDodajNovi;
    private javax.swing.JButton akcijaDodajPolaznikeNaGrupu;
    private javax.swing.JButton akcijaGenerirajPDF;
    private javax.swing.JButton akcijaObrisi;
    private javax.swing.JButton akcijaObrisiIzGrupe;
    private javax.swing.JButton akcijaOdustani;
    private javax.swing.JButton akcijaPromjeni;
    private javax.swing.JButton akcijaSlanjePoruke;
    private javax.swing.JButton akcijaTrazi;
    private javax.swing.JTextField brojPolaznika;
    private com.toedter.calendar.JDateChooser datum;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JList lista;
    private javax.swing.JTextField naziv;
    private javax.swing.JList polazniciNaGrupi;
    private javax.swing.JComboBox predavaci;
    private javax.swing.JComboBox smjerovi;
    private javax.swing.JList sviPolaznici;
    private javax.swing.JTextField uvjet;
    // End of variables declaration//GEN-END:variables
}
